import streamlit as st
import os

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="DeepSign - –ü—Ä–æ—Å—Ç–∞—è –≤–µ—Ä—Å–∏—è",
    page_icon="üí≥",
    layout="wide"
)

# –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.title("üí≥ DeepSign")
st.subheader("–°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π")

# –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
st.info("–≠—Ç–æ —É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è DeepSign –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
st.subheader("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã")

col1, col2 = st.columns(2)

with col1:
    st.write("**Python –º–æ–¥—É–ª–∏:**")
    try:
        import streamlit as st_module
        st.success(f"‚úÖ Streamlit {st_module.__version__}")
    except:
        st.error("‚ùå Streamlit")
    
    try:
        import tensorflow as tf
        st.success(f"‚úÖ TensorFlow {tf.__version__}")
    except:
        st.error("‚ùå TensorFlow")
    
    try:
        import cv2
        st.success(f"‚úÖ OpenCV {cv2.__version__}")
    except:
        st.error("‚ùå OpenCV")

with col2:
    st.write("**–§–∞–π–ª—ã –º–æ–¥–µ–ª–∏:**")
    if os.path.exists('model.tflite'):
        st.success("‚úÖ model.tflite (TensorFlow Lite)")
    elif os.path.exists('signature_verification_model_fixed.h5'):
        st.success("‚úÖ signature_verification_model_fixed.h5")
    elif os.path.exists('signature_verification_model.h5'):
        st.success("‚úÖ signature_verification_model.h5")
    else:
        st.warning("‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

# –ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.subheader("üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è")

uploaded_file = st.file_uploader(
    "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏",
    type=['png', 'jpg', 'jpeg', 'bmp']
)

if uploaded_file is not None:
    from PIL import Image
    image = Image.open(uploaded_file)
    st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", use_column_width=True)
    
    if st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
        st.info("‚ö†Ô∏è –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ–±—É—á–∏—Ç—å –º–æ–¥–µ–ª—å")
        st.write("–ó–∞–ø—É—Å—Ç–∏—Ç–µ Signature_Verification.ipynb –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
st.subheader("üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –∑–∞–ø—É—Å–∫—É")

st.markdown("""
### –î–ª—è –ø–æ–ª–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞:

1. **–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:**
   ```bash
   pip install -r requirements.txt
   ```

2. **–û–±—É—á–∏—Ç–µ –º–æ–¥–µ–ª—å:**
   - –û—Ç–∫—Ä–æ–π—Ç–µ `Signature_Verification.ipynb`
   - –í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ —è—á–µ–π–∫–∏
   - –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –º–æ–¥–µ–ª—å

3. **–ó–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:**
   ```bash
   streamlit run app.py
   ```

### –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
- `streamlit run app_advanced.py` - —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è
- `run_app.bat` - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫
- `diagnose.bat` - –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º
""")

# –§—É—Ç–µ—Ä
st.markdown("---")
st.markdown("¬© 2025 DeepSign was developed by Oleg Tinkov - –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π")
