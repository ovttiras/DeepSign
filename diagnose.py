#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –¥–ª—è DeepSign
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import sys
import os
import subprocess

def check_python():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–∏ Python"""
    print("üêç –ü—Ä–æ–≤–µ—Ä–∫–∞ Python...")
    version = sys.version_info
    print(f"   –í–µ—Ä—Å–∏—è Python: {version.major}.{version.minor}.{version.micro}")
    
    if version.major < 3 or (version.major == 3 and version.minor < 8):
        print("   ‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è Python 3.8 –∏–ª–∏ –≤—ã—à–µ!")
        return False
    else:
        print("   ‚úÖ Python –≤–µ—Ä—Å–∏—è –ø–æ–¥—Ö–æ–¥–∏—Ç")
        return True

def check_package(package_name, import_name=None):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞"""
    if import_name is None:
        import_name = package_name
    
    try:
        module = __import__(import_name)
        version = getattr(module, '__version__', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')
        print(f"   ‚úÖ {package_name}: {version}")
        return True
    except ImportError:
        print(f"   ‚ùå {package_name}: –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False

def check_dependencies():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    print("\nüì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    
    packages = [
        ('streamlit', 'streamlit'),
        ('tensorflow', 'tensorflow'),
        ('opencv-python', 'cv2'),
        ('numpy', 'numpy'),
        ('Pillow', 'PIL'),
        ('scikit-learn', 'sklearn'),
        ('matplotlib', 'matplotlib'),
        ('plotly', 'plotly'),
        ('pandas', 'pandas')
    ]
    
    all_ok = True
    for package, import_name in packages:
        if not check_package(package, import_name):
            all_ok = False
    
    return all_ok

def check_model_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–∏"""
    print("\nü§ñ –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–µ–ª–∏...")
    
    model_files = [
        'signature_verification_model_fixed.h5',
        'signature_verification_model.h5'
    ]
    
    found_models = []
    for model_file in model_files:
        if os.path.exists(model_file):
            size = os.path.getsize(model_file) / (1024 * 1024)  # MB
            print(f"   ‚úÖ {model_file}: {size:.1f} MB")
            found_models.append(model_file)
        else:
            print(f"   ‚ùå {model_file}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    if not found_models:
        print("   ‚ö†Ô∏è  –ú–æ–¥–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã! –ë—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å")
        return False
    else:
        return True

def check_app_files():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("\nüìÅ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
    
    app_files = [
        'app.py',
        'requirements.txt',
        'README.md'
    ]
    
    all_ok = True
    for file in app_files:
        if os.path.exists(file):
            print(f"   ‚úÖ {file}")
        else:
            print(f"   ‚ùå {file}: –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_ok = False
    
    return all_ok

def test_streamlit():
    """–¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ Streamlit"""
    print("\nüöÄ –¢–µ—Å—Ç –∑–∞–ø—É—Å–∫–∞ Streamlit...")
    
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å streamlit
        import streamlit as st
        print("   ‚úÖ Streamlit –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –≤–µ—Ä—Å–∏—é
        print(f"   üìã –í–µ—Ä—Å–∏—è Streamlit: {st.__version__}")
        
        return True
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ Streamlit: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ DeepSign")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏
    python_ok = check_python()
    deps_ok = check_dependencies()
    model_ok = check_model_files()
    files_ok = check_app_files()
    streamlit_ok = test_streamlit()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\nüìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢")
    print("=" * 50)
    
    if python_ok and deps_ok and files_ok and streamlit_ok:
        print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–π–¥–µ–Ω—ã! –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è.")
        print("\nüöÄ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
        print("   streamlit run app.py")
        print("   –∏–ª–∏")
        print("   run_app.bat")
    else:
        print("‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –ø—Ä–æ–±–ª–µ–º—ã:")
        
        if not python_ok:
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Python 3.8+")
        
        if not deps_ok:
            print("   - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: pip install -r requirements.txt")
        
        if not files_ok:
            print("   - –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
        
        if not streamlit_ok:
            print("   - –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Streamlit: pip install streamlit")
        
        if not model_ok:
            print("   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ Signature_Verification.ipynb –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")
    
    print("\n" + "=" * 50)

if __name__ == "__main__":
    main()

