import streamlit as st
import cv2
import numpy as np
import tensorflow as tf
import tempfile
import os
from PIL import Image
import base64

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="DeepSign - –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π",
    page_icon="üí≥",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://github.com/yourusername/deepsign',
        'Report a bug': "https://github.com/yourusername/deepsign/issues",
        'About': "DeepSign - –ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ò–ò"
    }
)

# –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ CSS —Å—Ç–∏–ª–∏ —Å –ª—É—á—à–∏–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏ UX/UI
st.markdown("""
<style>
    /* CSS –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Å—Ç–∏–ª–µ –ê–≥—Ä–æ–ø—Ä–æ–º–±–∞–Ω–∫–∞ */
    :root {
        --primary-color: #1E3A8A;
        --primary-dark: #1E40AF;
        --primary-light: #3B82F6;
        --accent-color: #F59E0B;
        --success-color: #10B981;
        --warning-color: #F59E0B;
        --error-color: #EF4444;
        --text-primary: #1F2937;
        --text-secondary: #6B7280;
        --background: #F8FAFC;
        --surface: #FFFFFF;
        --border: #E5E7EB;
        --shadow: 0 1px 3px rgba(0,0,0,0.1), 0 1px 2px rgba(0,0,0,0.06);
        --shadow-hover: 0 4px 6px rgba(0,0,0,0.1), 0 2px 4px rgba(0,0,0,0.06);
        --border-radius: 8px;
        --border-radius-small: 6px;
        --spacing-xs: 0.25rem;
        --spacing-sm: 0.5rem;
        --spacing-md: 1rem;
        --spacing-lg: 1.5rem;
        --spacing-xl: 2rem;
        --spacing-xxl: 3rem;
    }
    
    /* –ë–∞–∑–æ–≤—ã–µ —Å—Ç–∏–ª–∏ */
    .main .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
        max-width: 1200px;
    }
    
    /* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –≤ —Å—Ç–∏–ª–µ –ê–≥—Ä–æ–ø—Ä–æ–º–±–∞–Ω–∫–∞ */
    .main-header {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        color: white;
        padding: var(--spacing-xxl);
        border-radius: var(--border-radius);
        margin-bottom: var(--spacing-xl);
        text-align: center;
        box-shadow: var(--shadow);
        position: relative;
        overflow: hidden;
        border: 1px solid rgba(255,255,255,0.1);
    }
    
    .main-header::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(45deg, transparent 30%, rgba(255,255,255,0.05) 50%, transparent 70%);
        animation: shimmer 3s infinite;
    }
    
    @keyframes shimmer {
        0% { transform: translateX(-100%); }
        100% { transform: translateX(100%); }
    }
    
    .main-header h1 {
        font-size: 2.2rem;
        margin: 0;
        font-weight: 600;
        position: relative;
        z-index: 1;
        letter-spacing: -0.01em;
        text-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
    
    .main-header p {
        font-size: 1rem;
        margin: var(--spacing-sm) 0 0 0;
        opacity: 0.9;
        position: relative;
        z-index: 1;
        font-weight: 400;
        line-height: 1.5;
    }
    
    /* –ö–∞—Ä—Ç–æ—á–∫–∏ –≤ —Å—Ç–∏–ª–µ –ê–≥—Ä–æ–ø—Ä–æ–º–±–∞–Ω–∫–∞ */
    .card {
        background: var(--surface);
        padding: var(--spacing-lg);
        border-radius: var(--border-radius);
        box-shadow: var(--shadow);
        margin-bottom: var(--spacing-md);
        border: 1px solid var(--border);
        transition: all 0.2s ease-in-out;
        position: relative;
        overflow: hidden;
    }
    
    .card:hover {
        box-shadow: var(--shadow-hover);
        transform: translateY(-1px);
        border-color: var(--primary-light);
    }
    
    .card::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 3px;
        height: 100%;
        background: linear-gradient(180deg, var(--primary-color) 0%, var(--primary-light) 100%);
    }
    
    .card h3 {
        color: var(--primary-color);
        margin: 0 0 var(--spacing-sm) 0;
        font-size: 1.2rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: var(--spacing-sm);
    }
    
    .card p {
        margin: var(--spacing-sm) 0;
        line-height: 1.6;
        color: var(--text-primary);
        font-size: 0.95rem;
    }
    
    .card ul {
        margin: var(--spacing-sm) 0;
        padding-left: var(--spacing-lg);
    }
    
    .card li {
        margin: var(--spacing-xs) 0;
        line-height: 1.6;
        color: var(--text-primary);
        font-size: 0.9rem;
    }
    
    /* –ö–Ω–æ–ø–∫–∏ –≤ —Å—Ç–∏–ª–µ –ê–≥—Ä–æ–ø—Ä–æ–º–±–∞–Ω–∫–∞ */
    .stButton > button {
        background: linear-gradient(135deg, var(--primary-color) 0%, var(--primary-dark) 100%);
        color: white;
        border: none;
        border-radius: var(--border-radius-small);
        padding: var(--spacing-sm) var(--spacing-lg);
        font-weight: 500;
        font-size: 0.9rem;
        transition: all 0.2s ease-in-out;
        box-shadow: var(--shadow);
        position: relative;
        overflow: hidden;
        text-transform: none;
    }
    
    .stButton > button:hover {
        transform: translateY(-1px);
        box-shadow: var(--shadow-hover);
        background: linear-gradient(135deg, var(--primary-dark) 0%, var(--primary-color) 100%);
    }
    
    .stButton > button:active {
        transform: translateY(0);
        box-shadow: var(--shadow);
    }
    
    /* –§–∞–π–ª–æ–≤—ã–π –∑–∞–≥—Ä—É–∑—á–∏–∫ –≤ —Å—Ç–∏–ª–µ –ê–≥—Ä–æ–ø—Ä–æ–º–±–∞–Ω–∫–∞ */
    .stFileUploader > div {
        border: 2px dashed var(--primary-color);
        border-radius: var(--border-radius);
        padding: var(--spacing-xl);
        text-align: center;
        background: linear-gradient(135deg, #F8FAFC 0%, #F1F5F9 100%);
        transition: all 0.2s ease-in-out;
        position: relative;
        overflow: hidden;
    }
    
    .stFileUploader > div:hover {
        border-color: var(--primary-dark);
        background: linear-gradient(135deg, #EFF6FF 0%, #DBEAFE 100%);
        transform: translateY(-1px);
        box-shadow: var(--shadow);
    }
    
    .stFileUploader > div::before {
        content: 'üìÅ';
        font-size: 1.8rem;
        display: block;
        margin-bottom: var(--spacing-sm);
        opacity: 0.8;
    }
    
    /* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Å—Ç–∏–ª–µ –ê–≥—Ä–æ–ø—Ä–æ–º–±–∞–Ω–∫–∞ */
    .result-success {
        background: linear-gradient(135deg, #ECFDF5 0%, #D1FAE5 100%);
        border: 1px solid var(--success-color);
        border-radius: var(--border-radius);
        padding: var(--spacing-lg);
        margin: var(--spacing-md) 0;
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow);
    }
    
    .result-success::before {
        content: '‚úÖ';
        position: absolute;
        top: var(--spacing-md);
        right: var(--spacing-md);
        font-size: 1.4rem;
    }
    
    .result-warning {
        background: linear-gradient(135deg, #FFFBEB 0%, #FEF3C7 100%);
        border: 1px solid var(--warning-color);
        border-radius: var(--border-radius);
        padding: var(--spacing-lg);
        margin: var(--spacing-md) 0;
        position: relative;
        overflow: hidden;
        box-shadow: var(--shadow);
    }
    
    .result-warning::before {
        content: '‚ö†Ô∏è';
        position: absolute;
        top: var(--spacing-md);
        right: var(--spacing-md);
        font-size: 1.4rem;
    }
    
    /* –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */
    .stProgress > div > div > div {
        background: linear-gradient(90deg, var(--primary-color) 0%, var(--primary-light) 100%);
        border-radius: var(--border-radius-small);
    }
    
    /* –£–ª—É—á—à–µ–Ω–Ω—ã–π —Å–∞–π–¥–±–∞—Ä */
    .css-1d391kg {
        background: linear-gradient(180deg, #F8F9FA 0%, #E9ECEF 100%);
        border-right: 1px solid var(--border);
    }
    
    /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
    @media (max-width: 768px) {
        .main-header h1 {
            font-size: 2rem;
        }
        
        .main-header p {
            font-size: 1rem;
        }
        
        .card {
            padding: var(--spacing-md);
        }
        
        .main .block-container {
            padding-left: 1rem;
            padding-right: 1rem;
        }
    }
    
    /* –ê–Ω–∏–º–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ */
    @keyframes pulse {
        0% { opacity: 1; }
        50% { opacity: 0.5; }
        100% { opacity: 1; }
    }
    
    .loading {
        animation: pulse 2s infinite;
    }
    
    /* –£–ª—É—á—à–µ–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
    .stAlert {
        border-radius: var(--border-radius);
        border: none;
        box-shadow: var(--shadow);
    }
</style>
""", unsafe_allow_html=True)

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
def preprocess_image(image):
    """–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –º–æ–¥–µ–ª–∏"""
    try:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PIL –≤ numpy array
        img_array = np.array(image)
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ grayscale –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if len(img_array.shape) == 3:
            img_array = cv2.cvtColor(img_array, cv2.COLOR_RGB2GRAY)
        
        # –ò–∑–º–µ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä
        img_array = cv2.resize(img_array, (220, 155))
        
        # –ë–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è
        _, img_array = cv2.threshold(img_array, 127, 255, cv2.THRESH_BINARY_INV)
        
        # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ FLOAT32
        img_array = (img_array / 255.0).astype(np.float32)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞–Ω–∞–ª
        img_array = img_array.reshape(1, 155, 220, 1)
        
        return img_array
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")
        return None

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è
def predict_signature(model, image, model_format="keras", threshold=0.5):
    """–ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∏"""
    try:
        if model_format == "tflite":
            # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è TensorFlow Lite –º–æ–¥–µ–ª–∏
            input_details = model.get_input_details()
            output_details = model.get_output_details()
            
            # –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∏–º–µ—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø (FLOAT32)
            image_float32 = image.astype(np.float32)
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            model.set_tensor(input_details[0]['index'], image_float32)
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ñ–µ—Ä–µ–Ω—Å
            model.invoke()
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            prediction = model.get_tensor(output_details[0]['index'])[0][0]
            
        else:
            # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –¥–ª—è Keras –º–æ–¥–µ–ª–∏
            prediction = model.predict(image, verbose=0)[0][0]
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å —É—á–µ—Ç–æ–º –ø–æ—Ä–æ–≥–∞
        if prediction > threshold:
            result = "–ü–æ–¥–ª–∏–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å"
            result_type = "genuine"
        else:
            result = "–ü–æ–¥–¥–µ–ª—å–Ω–∞—è –ø–æ–¥–ø–∏—Å—å"
            result_type = "forged"
        
        confidence = max(prediction, 1 - prediction)
        
        return result, confidence, result_type
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è: {str(e)}")
        return None, None, None

# –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ TensorFlow Lite
@st.cache_resource
def load_signature_model():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –ø—Ä–µ–¥–æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å TensorFlow Lite –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –º–æ–¥–µ–ª–∏ (–ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç TensorFlow Lite)
        model_files = [
            'model.tflite',
            'signature_verification_model_fixed.h5',
            'signature_verification_model.h5'
        ]
        
        model_path = None
        model_type = None
        
        for file in model_files:
            if os.path.exists(file):
                model_path = file
                if file.endswith('.tflite'):
                    model_type = "TensorFlow Lite –º–æ–¥–µ–ª—å"
                elif "fixed" in file:
                    model_type = "–ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è H5 –º–æ–¥–µ–ª—å"
                else:
                    model_type = "–ë–∞–∑–æ–≤–∞—è H5 –º–æ–¥–µ–ª—å"
                break
        
        if model_path is None:
            st.warning("‚ö†Ô∏è –ú–æ–¥–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–æ–∑–¥–∞–π—Ç–µ —Ç–µ—Å—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å...")
            # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç—É—é —Ç–µ—Å—Ç–æ–≤—É—é –º–æ–¥–µ–ª—å
            from tensorflow.keras.models import Sequential
            from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
            
            model = Sequential([
                Conv2D(32, (3, 3), activation='relu', input_shape=(155, 220, 1)),
                MaxPooling2D(2, 2),
                Conv2D(64, (3, 3), activation='relu'),
                MaxPooling2D(2, 2),
                Flatten(),
                Dense(128, activation='relu'),
                Dropout(0.5),
                Dense(1, activation='sigmoid')
            ])
            
            model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])
            return model, "–¢–µ—Å—Ç–æ–≤–∞—è –º–æ–¥–µ–ª—å (–Ω–µ –æ–±—É—á–µ–Ω–∞)", "keras"
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        if model_path.endswith('.tflite'):
            # –ó–∞–≥—Ä—É–∂–∞–µ–º TensorFlow Lite –º–æ–¥–µ–ª—å
            interpreter = tf.lite.Interpreter(model_path=model_path)
            interpreter.allocate_tensors()
            return interpreter, model_type, "tflite"
        else:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º H5 –º–æ–¥–µ–ª—å (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
            from tensorflow.keras.models import load_model
            model = load_model(model_path)
            return model, model_type, "keras"
        
    except Exception as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {str(e)}")
        st.info("–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å Signature_Verification.ipynb –¥–ª—è –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–∏")
        return None, None, None

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏
model, model_type, model_format = load_signature_model()

if model is not None:
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.markdown("""
    <div class="main-header">
        <h1>DeepSign</h1>
        <p>–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–∞—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–µ–π –Ω–∞ –ø—Ä–∏–º–µ—Ä–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö CEDAR</p>
    </div>
    """, unsafe_allow_html=True)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è —Å–µ–∫—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    st.markdown("### ‚ÑπÔ∏è –û —Å–∏—Å—Ç–µ–º–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π")

    col1, col2, col3 = st.columns(3)

    with col1:
        st.markdown("""
        <div class="card">
            <h3>üß† –¢–µ—Ö–Ω–æ–ª–æ–≥–∏—è</h3>
            <p>–ò—Å–ø–æ–ª—å–∑—É–µ–º –≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–µ –∑—Ä–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –ø–æ–¥–ø–∏—Å–µ–π.</p>
        </div>
        """, unsafe_allow_html=True)

    with col2:
        st.markdown("""
        <div class="card">
            <h3>‚ö° –°–∫–æ—Ä–æ—Å—Ç—å</h3>
            <p>–ê–Ω–∞–ª–∏–∑ –ø–æ–¥–ø–∏—Å–∏ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω–µ–µ 1 —Å–µ–∫—É–Ω–¥—ã, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –±—ã—Å—Ç—Ä—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.</p>
        </div>
        """, unsafe_allow_html=True)

    with col3:
        st.markdown("""
        <div class="card">
            <h3>üéØ –¢–æ—á–Ω–æ—Å—Ç—å</h3>
            <p>–¢–æ—á–Ω–æ—Å—Ç—å –Ω–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤—ã–±–æ—Ä–∫–µ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 79%, —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –Ω–∞–¥–µ–∂–Ω—É—é –∑–∞—â–∏—Ç—É –æ—Ç –ø–æ–¥–¥–µ–ª–æ–∫.</p>
        </div>
        """, unsafe_allow_html=True)

    # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö CEDAR
    st.markdown("---")
    st.markdown("### üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö CEDAR")
    st.markdown("""
    <div class="card">
        <p><strong>–ò—Å—Ç–æ—á–Ω–∏–∫:</strong> CEDAR (Center of Excellence for Document Analysis and Recognition)</p>
        <p><strong>–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–∞—Ç–∞—Å–µ—Ç:</strong> <a href="https://cedar.buffalo.edu/NIJ/data/signatures.rar" target="_blank">https://cedar.buffalo.edu/NIJ/data/signatures.rar</a></p>
        <p><strong>–†–∞–∑–º–µ—Ä:</strong> 55 –∞–≤—Ç–æ—Ä–æ–≤, 24 –ø–æ–¥–ø–∏—Å–∏ –∫–∞–∂–¥–æ–≥–æ</p>
        <p><strong>–û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–ø–∏—Å–µ–π:</strong> 2640</p>
        <p><strong>–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ:</strong> –†–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –¥–≤—É–º—è –∫–ª–∞—Å—Å–∞–º–∏ - –Ω–∞—Å—Ç–æ—è—â–∏–µ –∏ –ø–æ–¥–¥–µ–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏</p>
        <p><strong>–§–æ—Ä–º–∞—Ç:</strong> –û—Ç—Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—ã—Å–æ–∫–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞</p>
        <p><strong>–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:</strong> –†–∞–∑–ª–∏—á–Ω—ã–µ —Å—Ç–∏–ª–∏ –ø–æ–¥–ø–∏—Å–µ–π, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–∞—Ä–∏–∞—Ü–∏–∏</p>
    </div>
    """, unsafe_allow_html=True)

    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.markdown("---")
    st.markdown("### üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
    st.markdown("""
    <div class="card">
        <ol>
            <li><strong>–°–∫–∞—á–∞–π—Ç–µ RAR –∞—Ä—Ö–∏–≤ —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã CEDAR:</strong> –ø–æ —Å—Å—ã–ª–∫–µ <a href="https://cedar.buffalo.edu/NIJ/data/signatures.rar" target="_blank">https://cedar.buffalo.edu/NIJ/data/signatures.rar</a></li>
            <li><strong>–†–∞—Å–ø–∞–∫—É–π—Ç–µ –∞—Ä—Ö–∏–≤:</strong> –í –∞—Ä—Ö–∏–≤–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –¥–≤–µ –ø–∞–ø–∫–∏:
                <ul>
                    <li><strong>full_org</strong> - —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥–ª–∏–Ω–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏</li>
                    <li><strong>full_forg</strong> - —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–¥–¥–µ–ª—å–Ω—ã–µ –ø–æ–¥–ø–∏—Å–∏</li>
                </ul>
            </li>
            <li><strong>–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:</strong> –í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –ª—é–±–æ–π –ø–∞–ø–∫–∏</li>
            <li><strong>–ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª:</strong> –î–ª—è –æ–±—ä–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–ª—å–Ω–æ –ø–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª</li>
            <li><strong>–ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–ª–æ–∫ "üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å–∏" –Ω–∏–∂–µ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∏</li>
            <li><strong>–ê–Ω–∞–ª–∏–∑ –ø–æ–¥–ø–∏—Å–∏:</strong> –ü–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å"</li>
        </ol>
    </div>
    """, unsafe_allow_html=True)

    # –ë–ª–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–¥–ø–∏—Å–∏
    st.markdown("---")
    st.markdown("### üöÄ –ù–∞—á–Ω–∏—Ç–µ –∞–Ω–∞–ª–∏–∑ –ø–æ–¥–ø–∏—Å–∏")

    col1, col2 = st.columns([1, 1])

    with col1:
        st.markdown("#### üì§ –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–¥–ø–∏—Å–∏")
        st.markdown("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç—ã: PNG, JPG, JPEG, BMP")
        
        uploaded_file = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∏",
            type=['png', 'jpg', 'jpeg', 'bmp'],
            help="–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã: PNG, JPG, JPEG, BMP"
        )
        
        if uploaded_file is not None:
            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            image = Image.open(uploaded_file)
            st.image(image, caption="–ó–∞–≥—Ä—É–∂–µ–Ω–Ω–∞—è –ø–æ–¥–ø–∏—Å—å", use_container_width=True)
            
            # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ—Ä–æ–≥–∞ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏
            st.markdown("#### ‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–Ω–∞–ª–∏–∑–∞")
            confidence_threshold = st.slider(
                "–ü–æ—Ä–æ–≥ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ (%)",
                min_value=0,
                max_value=100,
                value=50,
                step=1,
                help="50% - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –ø–æ—Ä–æ–≥\n–í—ã—à–µ 50% - –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–º–µ–Ω—å—à–µ –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π)\n–ù–∏–∂–µ 50% - –±–æ–ª–µ–µ –º—è–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ (–±–æ–ª—å—à–µ –ª–æ–∂–Ω—ã—Ö —Å—Ä–∞–±–∞—Ç—ã–≤–∞–Ω–∏–π)"
            )
            
            # –ö–Ω–æ–ø–∫–∞ –∞–Ω–∞–ª–∏–∑–∞
            if st.button("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—å", type="primary"):
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
                progress_bar = st.progress(0)
                status_text = st.empty()
                
                try:
                    status_text.text("üîÑ –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ...")
                    progress_bar.progress(25)
                    
                    # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞
                    processed_image = preprocess_image(image)
                    
                    if processed_image is not None:
                        status_text.text("üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–¥–ø–∏—Å—å...")
                        progress_bar.progress(50)
                        
                        # –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
                        threshold = confidence_threshold / 100.0  # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç—ã –≤ –¥–µ—Å—è—Ç–∏—á–Ω—É—é –¥—Ä–æ–±—å
                        result, confidence, result_type = predict_signature(model, processed_image, model_format, threshold)
                        
                        status_text.text("‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")
                        progress_bar.progress(100)
                        
                        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è UX
                        import time
                        time.sleep(0.5)
                        
                        # –û—á–∏—â–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã
                        progress_bar.empty()
                        status_text.empty()
                        
                        if result is not None:
                            # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
                            st.markdown("#### üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞")
                            
                            # –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
                            if result_type == "genuine":
                                st.markdown(f"""
                                <div class="result-success">
                                    <h2 style="margin: 0; color: #2E7D32;">‚úÖ {result}</h2>
                                    <p style="margin: 0.5rem 0; font-size: 1.1rem; font-weight: 600;">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.1%}</p>
                                    <p style="margin: 0; color: #4CAF50; font-size: 0.9rem;">–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–∑–Ω–∞–Ω–∞ –ø–æ–¥–ª–∏–Ω–Ω–æ–π</p>
                                </div>
                                """, unsafe_allow_html=True)
                            else:
                                st.markdown(f"""
                                <div class="result-warning">
                                    <h2 style="margin: 0; color: #F57C00;">‚ùå {result}</h2>
                                    <p style="margin: 0.5rem 0; font-size: 1.1rem; font-weight: 600;">–£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {confidence:.1%}</p>
                                    <p style="margin: 0; color: #FF9800; font-size: 0.9rem;">–ü–æ–¥–ø–∏—Å—å –ø—Ä–∏–∑–Ω–∞–Ω–∞ –ø–æ–¥–¥–µ–ª—å–Ω–æ–π</p>
                                </div>
                                """, unsafe_allow_html=True)
                                
                        else:
                            st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –ø–æ–¥–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.")
                    else:
                        st.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞.")
                        
                except Exception as e:
                    progress_bar.empty()
                    status_text.empty()
                    st.error(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
                    st.info("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG, JPG, JPEG –∏–ª–∏ BMP")

    # –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–æ–¥–µ–ª–∏ –∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ
    st.markdown("---")
    st.markdown("### üß† –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –Ω–µ–π—Ä–æ–Ω–Ω–æ–π —Å–µ—Ç–∏")

    st.markdown("""
    <div class="card">
        <h3>üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏</h3>
        <p><strong>–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:</strong> –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è 220√ó155 –ø–∏–∫—Å–µ–ª–µ–π –≤ –≥—Ä–∞–¥–∞—Ü–∏—è—Ö —Å–µ—Ä–æ–≥–æ</p>
        <p><strong>–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞:</strong> –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞, –±–∏–Ω–∞—Ä–∏–∑–∞—Ü–∏—è, –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è [0,1]</p>
        <p><strong>–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞:</strong> CNN —Å Conv2D, MaxPooling, Dropout, Dense —Å–ª–æ—è–º–∏</p>
        <p><strong>–ê–∫—Ç–∏–≤–∞—Ü–∏—è:</strong> Sigmoid –¥–ª—è –±–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏</p>
        <p><strong>–û–±—É—á–µ–Ω–∏–µ:</strong> Adam –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä, Binary Crossentropy, –≤–∞–ª–∏–¥–∞—Ü–∏—è 20%</p>
        <p><strong>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:</strong> –¢–æ—á–Ω–æ—Å—Ç—å 79% (—Ç–µ—Å—Ç), –≤—Ä–µ–º—è –∏–Ω—Ñ–µ—Ä–µ–Ω—Å–∞ < 1 —Å–µ–∫</p>
        <p><strong>–°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:</strong> TensorFlow/Keras, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ TensorFlow Lite</p>
    </div>
    """, unsafe_allow_html=True)

    # –§—É—Ç–µ—Ä
    st.markdown("---")
    st.markdown("""
    <div style="text-align: center; color: #666; padding: 2rem;">
        <p>¬© 2025 DeepSign was developed by Oleg Tinkov - –°–∏—Å—Ç–µ–º–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –ø–æ–¥–ø–∏—Å–µ–π</p>
        <p>–ò–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –¥–ª—è –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏</p>
    </div>
    """, unsafe_allow_html=True)

else:
    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–∞ –º–æ–¥–µ–ª–∏ –≤ –ø–∞–ø–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.")
    
    st.markdown("### üìÅ –¢—Ä–µ–±—É–µ–º—ã–µ —Ñ–∞–π–ª—ã:")
    st.code("""
    model.tflite                        # –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω–æ (TensorFlow Lite)
    –∏–ª–∏
    signature_verification_model_fixed.h5  # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (Keras)
    –∏–ª–∏
    signature_verification_model.h5      # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞ (Keras)
    """)
